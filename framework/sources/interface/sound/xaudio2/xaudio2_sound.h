//*****************************************************************************
//
// XAudio2サウンド処理 [xaudio2_sound.h]
//
// Author		: Kenji Kabutomori
//
//*****************************************************************************

//*****************************************************************************
// 二重定義防止
//*****************************************************************************
#pragma once

#ifndef _XAUDIO2_SOUND_H_
#define _XAUDIO2_SOUND_H_

//*****************************************************************************
// インクルード
//*****************************************************************************
#include <xaudio2.h>

// sound
#include "interface/sound/sound.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************

//*****************************************************************************
// クラスの前方参照
//*****************************************************************************
class CSoundDevice;

//*****************************************************************************
// クラス定義
//*****************************************************************************
class CXAudio2Sound : public CSound
{
public:
	// コンストラクタ
	CXAudio2Sound(CSoundDevice* sound_device);

	// デストラクタ
	virtual ~CXAudio2Sound(void);

	// 初期化
	bool Init(void);

	// 終了
	void Uninit(void);

	// ロード
	bool Load(const s8* filename);

	// 再生
	void Play(bool is_loop);

	// 停止
	void Stop(void);

	// 一時停止
	void Pause(void);

	// 状態の取得
	bool GetStatus(void){return is_play_;}

	// ボリュームの設定
	//void SetVolume();

protected:

private:
	// サウンドデバイス
	CSoundDevice* sound_device_;

	// プレイフラグ
	bool is_play_;

	u32 sound_id_;											// サウンドID
	IXAudio2SourceVoice* source_voice_;						// ソースボイス
	BYTE* data_audio_;										// オーディオデータ
	DWORD size_audio_;										// オーディオデータサイズ
};

#endif // _XAUDIO2_SOUND_H_

//---------------------------------- EOF --------------------------------------
