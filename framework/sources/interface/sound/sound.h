//*****************************************************************************
//
// サウンドクラス
//
// Author		: Kenji Kabutomori
//
//*****************************************************************************

//*****************************************************************************
// 多重定義防止
//*****************************************************************************
#pragma once

#ifndef _SOUND_H_
#define _SOUND_H_

//*****************************************************************************
// インクルード
//*****************************************************************************
// basic
#include "basic/basic.h"

//*****************************************************************************
// ライブラリのリンク
//*****************************************************************************

//*****************************************************************************
// マクロ定義
//*****************************************************************************

//*****************************************************************************
// 構造体定義
//*****************************************************************************

//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************

//*****************************************************************************
// クラスの前方参照
//*****************************************************************************
class CSoundDevice;

//*****************************************************************************
// クラス定義
//*****************************************************************************
class CSound : public CBasic
{
public:
	// 作成処理
	static CSound* Create(CSoundDevice* sound_device);

	// 初期化
	virtual bool Init(void);

	// 終了
	virtual void Uninit(void);

	// ロード
	virtual bool Load(const s8* filename) = 0;

	// 再生
	virtual void Play(bool loop_flag) = 0;

	// 停止
	virtual void Stop(void) = 0;

	// 一時停止
	virtual void Pause(void) = 0;

	// 状態取得
	virtual bool GetStatus(void) = 0;

protected:
	// コンストラクタ
	CSound(CSoundDevice* sound_device);

	// デストラクタ
	virtual ~CSound(void);

	// サウンドデバイス
	CSoundDevice* sound_device_;

	// ファイル名の設定
	void SetFilename(const s8* filename);

private:
	// ファイル名
	char* filename_;
};

#endif	// _SOUND_H_

//---------------------------------- EOF --------------------------------------
