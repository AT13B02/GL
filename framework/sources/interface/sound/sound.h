//*****************************************************************************
//
// サウンドクラス [sound.h]
//
// Author		: KENJI KABUTOMORI
// Date			: 2014/06/10(Tue)
// Version		: 1.00
// Update Date	: 2014/06/10(Tue)
//
//*****************************************************************************

//*****************************************************************************
// 多重定義防止
//*****************************************************************************
#pragma once

#ifndef _SOUND_H_
#define _SOUND_H_

//*****************************************************************************
// インクルード
//*****************************************************************************
#include "basic.h"

//*****************************************************************************
// ライブラリのリンク
//*****************************************************************************

//*****************************************************************************
// マクロ定義
//*****************************************************************************

//*****************************************************************************
// 構造体定義
//*****************************************************************************

//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************

//*****************************************************************************
// クラスの前方参照
//*****************************************************************************
class CSoundDevice;

//*****************************************************************************
// クラス定義
//*****************************************************************************
class CSound : public CBasic
{
public:
	// 作成処理
	static CSound* Create(CSoundDevice* pSoundDevice);

	// 初期化
	virtual bool Init(void);

	// 終了
	virtual void Uninit(void);

	// ロード
	virtual bool Load(const char* pFilename) = 0;

	// 再生
	virtual void Play(bool bLoopFlag) = 0;

	// 停止
	virtual void Stop(void) = 0;

	// 一時停止
	virtual void Pause(void) = 0;

	// 状態取得
	virtual bool GetStatus(void) = 0;

protected:
	// コンストラクタ
	CSound(void);

	// デストラクタ
	virtual ~CSound(void);

	// ファイル名の設定
	void SetFilename(const char* pFilename);

private:
	// ファイル名
	char* m_pFilename;
};

#endif	// _SOUND_H_

//---------------------------------- EOF --------------------------------------
