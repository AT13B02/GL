//*****************************************************************************
//
// サウンドマネージャークラス
//
// Author		: Kenji Kabutomori
//
//*****************************************************************************

//*****************************************************************************
// インクルード
//*****************************************************************************
// sound
#include "interface/sound/sound_manager.h"
#include "interface/sound/sound.h"
#include "interface/sound/device/sound_device.h"

// common
#include "common/common.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************

//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************

//*****************************************************************************
// グローバル変数
//*****************************************************************************

//=============================================================================
// デフォルトコンストラクタ
//=============================================================================
CSoundManager::CSoundManager(void)
{
	sound_device_ = new CSoundDevice();
}

//=============================================================================
// デストラクタ
//=============================================================================
CSoundManager::~CSoundManager(void)
{
}

//=============================================================================
// 初期化処理
//=============================================================================
bool CSoundManager::Init(void)
{
	CFileManager::Init();

	if(!sound_device_->Init())
	{
		// サウンドデバイスの初期化失敗
		DEBUG_ERROR_MESSAGE("サウンドデバイスの初期化失敗");
		return false;
	}

	return true;
}

//=============================================================================
// 終了処理
//=============================================================================
void CSoundManager::Uninit(void)
{
	CFileManager::Uninit();

	SAFE_RELEASE(sound_device_);
}

//=============================================================================
// 作成処理
//=============================================================================
CSound* CSoundManager::Create(const s8* filename)
{
	CSound* pSound = NULL;

#ifdef _USING_XAUDIO2_
	pSound = CSound::Create(sound_device_);
#endif

	if(pSound != NULL)
	{
		// 初期化
		pSound->Init();

		// ロード
		pSound->Load(filename);

	}

	return pSound;
}

//=============================================================================
// 開放処理
//=============================================================================
void CSoundManager::ReleaseData(CSound* sound)
{
	SAFE_RELEASE(sound);
}

//---------------------------------- EOF --------------------------------------
