//*****************************************************************************
//
// ネットワークマネージャークラス [network_data_buffer.cpp]
//
// Author		: KENJI KABUTOMORI
// Date			: 2014/09/17(Wed)
// Version		: 1.00
// Update Date	: 2014/09/17(Wed)
//
//*****************************************************************************

//*****************************************************************************
// インクルード
//*****************************************************************************
#include "network_data_buffer.h"

#include <list>

#include "common.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************

//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************

//*****************************************************************************
// グローバル変数
//*****************************************************************************

//=============================================================================
// コンストラクタ
//=============================================================================
CNetworkDataBuffer::CNetworkDataBuffer(void)
{
	m_bChangeFlag = false;

	for(int i = 0;i < LIST_TYPE_MAX;i++)
	{
		m_pList[i] = new std::list<NETWORK_DATA>();
	}
}

//=============================================================================
// デストラクタ
//=============================================================================
CNetworkDataBuffer::~CNetworkDataBuffer(void)
{
}

//=============================================================================
// 終了
//=============================================================================
bool CNetworkDataBuffer::Init(void)
{
	return true;
}

//=============================================================================
// 終了
//=============================================================================
void CNetworkDataBuffer::Uninit(void)
{
	for(int i = 0;i < LIST_TYPE_MAX;i++)
	{
		SAFE_DELETE(m_pList[i]);
	}
}

//=============================================================================
// データの格納
//=============================================================================
void CNetworkDataBuffer::Push(NETWORK_DATA Data)
{
	m_pList[LIST_TYPE_CONTAINER]->push_back(Data);
}

//=============================================================================
// データの取り出し
//=============================================================================
NETWORK_DATA CNetworkDataBuffer::Pop(void)
{
	NETWORK_DATA Data;
	auto it = m_pList[LIST_TYPE_USE]->begin();

	Data = m_pList[LIST_TYPE_USE]->front();

	m_pList[LIST_TYPE_USE]->pop_front();

	return Data;
}

bool CNetworkDataBuffer::Empty(void)
{
	return m_pList[LIST_TYPE_USE]->empty();
}

//---------------------------------- EOF --------------------------------------
