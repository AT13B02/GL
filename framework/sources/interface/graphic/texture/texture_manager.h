//*****************************************************************************
//
// テクスチャマネージャークラス
//
// Author		: Kenji Kabutomori
//
//*****************************************************************************

//*****************************************************************************
/**
*	テクスチャマネージャークラス
*
*	テクスチャクラスを管理するクラス
*
*------------------------------------------------------------------------------
*
*	Update : 2014/06/10(Tue)
*
*	[Load]
*	返り値	: 成功判定(成功 : true / 失敗 : false)
*	引数	: const char* テクスチャのファイル名
*	テクスチャの読み込みをする
*	対応ファイルはTGAファイルのみ(圧縮は非対応)
*	拡張子によってファイルの識別を行う
*	保存形式と拡張子が違う場合の動作は保証しない
*
*	[Set]
*	返り値	: void
*	引数	: void
*	テクスチャの設定をする
*	Load関数を読んでいないと失敗する
*
*	[Uninit]
*	返り値	: void
*	引数	: void
*	テクスチャの破棄をする
*	Load関数を呼び直して違うテクスチャを設定することが出来る
*
*	[Release]
*	返り値	: void
*	引数	: void
*	終了処理を同時に行う
*	インスタンスも一緒に破棄
*
*/
//*****************************************************************************

//*****************************************************************************
// 多重定義防止
//*****************************************************************************
#pragma once

#ifndef _TEXTURE_MANAGER_H_
#define _TEXTURE_MANAGER_H_

//*****************************************************************************
// warning消し
//*****************************************************************************
#pragma warning (disable : 4005)

//*****************************************************************************
// インクルード
//*****************************************************************************
// common
#include "common/file/file_manager.h"

//*****************************************************************************
// ライブラリのリンク
//*****************************************************************************

//*****************************************************************************
// マクロ定義
//*****************************************************************************

//*****************************************************************************
// 構造体定義
//*****************************************************************************

//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************

//*****************************************************************************
// クラスの前方参照
//*****************************************************************************
class CTexture;
class CDeviceHolder;

//*****************************************************************************
// クラス定義
//*****************************************************************************
class CTextureManager : public CFileManager<CTexture*>
{
public:
	// コンストラクタ
	CTextureManager(CDeviceHolder* device_holder);

	// デストラクタ
	~CTextureManager(void);

	// 初期化
	bool Init();

	// 終了
	void Uninit(void);

private:
	// デバイスホルダー
	CDeviceHolder* device_holder_;

	// データの作成
	CTexture* Create(std::string filename);

	// データの開放
	void ReleaseData(CTexture* texture);
};

#endif	// _TEXTURE_MANAGER_H_

//---------------------------------- EOF --------------------------------------
