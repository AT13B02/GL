//*****************************************************************************
//
// ライトマネージャークラス
//
// Author		: Kenji Kabutomori
//
//*****************************************************************************

//*****************************************************************************
// インクルード
//*****************************************************************************
// graphic
#include "interface/graphic/light/light.h"
#include "interface/graphic/light/light_manager.h"

// common
#include "common/math/math.h"
#include "common/common.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************

//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************

//*****************************************************************************
// グローバル変数
//*****************************************************************************

//=============================================================================
// コンストラクタ
//=============================================================================
CLightManager::CLightManager(CDeviceHolder* device_holder) :
number_light_(0)
{
	// グラフィックデバイスの設定
	device_holder_ = device_holder;
}

//=============================================================================
// デストラクタ
//=============================================================================
CLightManager::~CLightManager(void)
{
}

//=============================================================================
// 初期化処理
//=============================================================================
bool CLightManager::Init(void)
{
	return true;
}

//=============================================================================
// 更新処理
//=============================================================================
void CLightManager::Update(void)
{
}

//=============================================================================
// 終了処理
//=============================================================================
void CLightManager::Uninit(void)
{
	for(auto it = light_list_.begin();it != light_list_.end();++it)
	{
		SAFE_RELEASE((*it));
	}

	light_list_.clear();
}

//=============================================================================
// 設定処理
//=============================================================================
void CLightManager::Set(void)
{
	// ライトの設定
	int light_index = 0;
	for(auto it = light_list_.begin();it != light_list_.end() && light_index < CLight::LIGHT_MAX;++it)
	{
		(*it)->SetLightIndex(light_index);
		(*it)->Set();
		light_index++;
	}
}

//=============================================================================
// 設定処理
//=============================================================================
void CLightManager::Unset(void)
{
	// ライトの設定
	for(auto it = light_list_.begin();it != light_list_.end();++it)
	{
		(*it)->Unset();
	}
}

//=============================================================================
// 設定処理
//=============================================================================
void CLightManager::Add(CLight* light)
{
	if(number_light_ >= CLight::LIGHT_MAX)
	{
		SAFE_RELEASE(light);
		return;
	}
	// ライトの追加
	light_list_.push_back(light);
	number_light_++;
}

//---------------------------------- EOF --------------------------------------
