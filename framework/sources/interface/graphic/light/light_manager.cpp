//*****************************************************************************
//
// ライトマネージャークラス [light_manager.h]
//
// Author		: KENJI KABUTOMORI
// Date			: 2014/09/22(Mon)
// Version		: 1.00
// Update Date	: 2014/09/22(Mon)
//
//*****************************************************************************

//*****************************************************************************
// インクルード
//*****************************************************************************
#include "application.h"

#ifdef _USING_OPENGL_
//#include "gl_light.h"
#endif

#ifdef _USING_DIRECTX_
#include "dx_light.h"
#endif

#include "light_manager.h"
#include "math.h"

#include "input_manager.h"
#include "input_keyboard.h"

#include "common.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************

//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************

//*****************************************************************************
// グローバル変数
//*****************************************************************************

//=============================================================================
// コンストラクタ
//=============================================================================
CLightManager::CLightManager(CGraphicsDevice* pGraphicsDevice)
{
	// グラフィックデバイスの設定
	m_pGraphicsDevice = pGraphicsDevice;

	// ライト配列の生成
	m_pLight = new CLight*[LIGHT_MAX];

	// ライト配列の初期化
	for(int i = 0;i < LIGHT_MAX;i++)
	{
		m_pLight[i] = NULL;
	}

	// ライトの生成
	//m_pLight[0] = CLight::Create(pGraphicsDevice);

	// 向きの設定
	//m_pLight[0]->SetVector(VECTOR3(0.0f,-1.0f,0.3f));

	// 色の設定
	//m_pLight[0]->SetColor(COLOR4F(1.0f,1.0f,1.0f,1.0f));

}

//=============================================================================
// デストラクタ
//=============================================================================
CLightManager::~CLightManager(void)
{
}

//=============================================================================
// 初期化処理
//=============================================================================
bool CLightManager::Init(void)
{
	return true;
}

//=============================================================================
// 更新処理
//=============================================================================
void CLightManager::Update(void)
{
}

//=============================================================================
// 終了処理
//=============================================================================
void CLightManager::Uninit(void)
{
	// 
	for(int i = 0;i < LIGHT_MAX;i++)
	{
		// 開放処理
		//SAFE_RELEASE(m_pLight[i]);
	}

	// ライト配列の開放
	SAFE_DELETE_ARRAY(m_pLight);
}

//=============================================================================
// 設定処理
//=============================================================================
void CLightManager::Set(void)
{
	for(int i = 0;i < LIGHT_MAX;i++)
	{
		if(m_pLight[i] != NULL)
		{
			//m_pLight[i]->Set();
		}
	}
}

//=============================================================================
// 取得処理
//=============================================================================
CLight* CLightManager::Get(int nNumber)
{
	if(nNumber >= 0 && nNumber < LIGHT_MAX)
	{
		return m_pLight[nNumber];
	}

	return NULL;
}

//---------------------------------- EOF --------------------------------------
