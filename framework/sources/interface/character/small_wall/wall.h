//*****************************************************************************
//
// 壁クラス
// Author		: ooigawa kazuma
//
//*****************************************************************************

//*****************************************************************************
// 多重定義防止
//*****************************************************************************
#pragma once

#ifndef _WALL_H_
#define _WALL_H_

//*****************************************************************************
// インクルード
//*****************************************************************************
//character
#include "wall_manager.h"
#include "interface/character/character_interface.h"

//*****************************************************************************
// ライブラリのリンク
//*****************************************************************************

//*****************************************************************************
// マクロ定義
//*****************************************************************************

//*****************************************************************************
// 構造体定義
//*****************************************************************************
typedef enum
{
	WALL_KIND_SMALL = 0,
	WALL_KIND_BIG
}WALL_KIND;
//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************

//*****************************************************************************
// クラスの前方参照
//*****************************************************************************

//*****************************************************************************
// クラス定義
//*****************************************************************************
class CWall : public CCharacterInterface
{
public:
	CWall( CInterfaceManager* interface_manager , WALL_KIND wall_kind);
	~CWall(void);

	//初期化
	bool Init( void );

	//更新
	void Update( void );

	//描画
	void Draw( void );

	// ポジション取得
	const VECTOR3& position( void ) const { return position_; }

	// ポジション設定
	void set_postion( const VECTOR3& position ){ position_ = position; }

	// ローテーション取得
	const VECTOR3& rotation( void ) const { return rotation_; }

	// ローテーション設定
	void set_rotation( const VECTOR3& rotation ){ rotation_ = rotation; }

	//壁のサイズ(当たり判定用)指定
	void set_size( const VECTOR3& size ){size_ = size;}
private:
protected:
	// インターフェースマネージャーのポインタ
	CInterfaceManager* interface_manager_;

	// オブジェクトキー
	u32 object_key_;

	// 各種値
	VECTOR3 position_;
	VECTOR3 rotation_;
	VECTOR3 scale_;
	VECTOR3 size_;//当たり判定用の大きさ
	WALL_KIND wall_kind_;
};
//---------------------------------- EOF --------------------------------------

#endif // _WALL_H_