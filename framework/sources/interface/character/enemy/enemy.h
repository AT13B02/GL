//*****************************************************************************
//
// エネミークラス [enemy.h]
//
// Author		: KENJI KABUTOMORI
// Date			: 2014/04/21(Mon)
// Version		: 1.00
// Update Date	: 2014/05/14(Wed)
//
//*****************************************************************************

//*****************************************************************************
// 多重定義防止
//*****************************************************************************
#pragma once

#ifndef _ENEMY_H_
#define _ENEMY_H_

//*****************************************************************************
// インクルード
//*****************************************************************************
#include "math.h"

//*****************************************************************************
// ライブラリのリンク
//*****************************************************************************

//*****************************************************************************
// マクロ定義
//*****************************************************************************

//*****************************************************************************
// 構造体定義
//*****************************************************************************

//*****************************************************************************
// クラスの前方参照
//*****************************************************************************
class CObjectManager;

//*****************************************************************************
// クラス定義
//*****************************************************************************
class CEnemy
{
public:
	typedef enum
	{
		ENEMY_TYPE_NONE = 0,
		ENEMY_TYPE_TEST,
		ENEMY_TYPE_TEST3D,
		ENEMY_TYPE_MAX,
	}ENEMY_TYPE;

	// デストラクタ
	virtual ~CEnemy(void);

	// エネミータイプの取得
	ENEMY_TYPE GetEnemyType(void){return m_EnemyType;}

	// オブジェクトの作成(オブジェクト番号,生成したオブジェクト数)
	virtual int CreateObject(int** pOutNumbers){return 0;}

	virtual void Update(void){}

	virtual void Draw(void){}

	// 開放処理
	virtual void Release(void){delete this;}

	bool GetDeathFlag(void){return m_bDeathFlag;}

	void SetPosition(VECTOR3 Position){m_Position = Position;}

protected:
	// コンストラクタ
	CEnemy(ENEMY_TYPE EnemyType);

	// オブジェクトマネージャー
	CObjectManager* m_pObjectManager;

	// オブジェクト番号
	int* m_pNumber;

	// 死亡フラグ
	bool m_bDeathFlag;

	VECTOR3 m_Position;

	VECTOR2 m_Size;
private:
	// エネミータイプ
	ENEMY_TYPE m_EnemyType;
};

#endif	// _ENEMY_H_

//---------------------------------- EOF --------------------------------------
