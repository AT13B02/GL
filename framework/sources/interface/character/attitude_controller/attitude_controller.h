//*****************************************************************************
//
// 姿勢制御クラス
//
// Author		: Kenji Kabutomori
//
//*****************************************************************************

//*****************************************************************************
// 多重定義防止
//*****************************************************************************
#pragma once

#ifndef _ATTITUDE_CONTROLLER_H_
#define _ATTITUDE_CONTROLLER_H_

//*****************************************************************************
// インクルード
//*****************************************************************************
#include <list>

// basic
#include "basic/basic.h"

// math
#include "common/math/math.h"

//*****************************************************************************
// ライブラリのリンク
//*****************************************************************************

//*****************************************************************************
// マクロ定義
//*****************************************************************************

//*****************************************************************************
// 構造体定義
//*****************************************************************************

//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************

//*****************************************************************************
// クラスの前方参照
//*****************************************************************************
class CInterfaceManager;
class CCharacterInterface;

//*****************************************************************************
// クラス定義
//*****************************************************************************
class CAttitudeController : public CBasic
{
public:
	// コンストラクタ
	CAttitudeController(CInterfaceManager* interface_manager);

	// デストラクタ
	~CAttitudeController(void);

	// 初期化処理
	bool Init(void);

	// 終了処理
	void Uninit(void);

	// 更新処理
	void Update(void);

	// 描画処理
	void Draw(void){}

	// 追加処理
	void Push(CCharacterInterface* character_interface);

	// 回転軸の設定
	void set_axis(const VECTOR3& axis){axis_ = axis;}

	// 基本ベクトルの設定
	void set_basic_vector(const VECTOR3& basic_vector){basic_vector_ = basic_vector;}

	// 前方ベクトル
	const VECTOR3& front_vector(void){return front_vector_;}
private:
	VECTOR3 basic_vector_;
	VECTOR3 axis_;
	VECTOR3 rotation_;

	VECTOR3 front_vector_;
	VECTOR3 right_vector_;

	CInterfaceManager* interface_manager_;

	// 制御するキャラクターコンテナ
	std::list<CCharacterInterface*> character_container_;
};

#endif // _ATTITUDE_CONTROLLER_H_

//---------------------------------- EOF --------------------------------------
