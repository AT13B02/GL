//*****************************************************************************
//
// ライフクラス
//
// Author		: Kazuma Ooigawa
//
//*****************************************************************************

//*****************************************************************************
// 多重定義防止
//*****************************************************************************
#pragma once

#ifndef _LIFE_H_
#define _LIFE_H_

//*****************************************************************************
// インクルード
//*****************************************************************************
#include "common/math/math.h"
#include "../character_interface.h"

//*****************************************************************************
// ライブラリのリンク
//*****************************************************************************

//*****************************************************************************
// マクロ定義
//*****************************************************************************

//*****************************************************************************
// 構造体定義
//*****************************************************************************

//*****************************************************************************
// クラスの前方参照
//*****************************************************************************
class CInterfaceManager;
class CBillboard;

//*****************************************************************************
// クラス定義
//*****************************************************************************
class CLife : public CCharacterInterface
{
public:
	// コンストラクタ
	CLife(CInterfaceManager* interface_manager , s32 max_life , s32 max_length );

	// デストラクタ
	~CLife(void);

	// 初期化
	bool Init(void);

	// 更新
	void Update(void);

	// 描画
	void Draw(void);

	// 終了
	void Uninit(void);

	// パラメータの設定
	void SetParameter(const VECTOR3& position , const s32& player_id );

	//位置取得
	VECTOR3 position( void ){ return position_; }

	//プレイヤーID取得
	s32 player_id( void ){ return player_id_;}

	//ライフ取得
	s32 life( void ){ return life_;}

	//位置セット
	void set_position( const VECTOR3& pos ){ position_ = pos ;}

	//ライフセット
	void set_life( const s32 life ){ life_ = life;}

	//消去
	void Erase( void );
private:
	u32 object_key_;
	VECTOR3 position_;
	u32 max_life_;
	s32 life_;
	u32 max_length_;
	s32 length_;
	s32 player_id_;
	CBillboard* object_bill_;
	CInterfaceManager* interface_manager_;
};
#endif //_LIFE_H_
//---------------------------------- EOF --------------------------------------
