//*****************************************************************************
//
// アプリケーションマネージャークラス
//
// Author		: Kenji Kabutomori
//
//*****************************************************************************

//*****************************************************************************
// 多重定義防止
//*****************************************************************************
#pragma once

#ifndef _APPLICATION_MANAGER_H_
#define _APPLICATION_MANAGER_H_

//*****************************************************************************
// インクルード
//*****************************************************************************
#include "basic.h"
#include <windows.h>

//*****************************************************************************
// ライブラリのリンク
//*****************************************************************************

//*****************************************************************************
// マクロ定義
//*****************************************************************************

//*****************************************************************************
// 構造体定義
//*****************************************************************************

//*****************************************************************************
// クラスの前方参照
//*****************************************************************************
class CMainWindow;
class CFpsManager;
class CSceneManager;
class CInterfaceManager;
class CThread;

//*****************************************************************************
// クラス定義
//*****************************************************************************
class CApplicationManager : public CBasic
{
public:
	// コンストラクタ
	CApplicationManager(HINSTANCE hinstance);

	// デストラクタ
	~CApplicationManager(void);

	// 初期化処理
	bool Init(void);

	// 更新処理
	void Update(void);

	// 終了処理
	void Uninit(void);

	// 実行
	void Run(void);

	// デバッグ用
	CInterfaceManager* interface_manager(void){return interface_manager_;}

	// 更新フラグを切り換え
	void SwitchUpdateFlag(void){update_flag_ ^= true;}
private:
	// インスタンス
	HINSTANCE hinstance_;

	// ウィンドウハンドル
	HWND hwnd_;

	// メインウィンドウ
	CMainWindow* main_window_;

	// FPSマネージャー
	CFpsManager* fps_manager_;

	// シーンマネージャー
	CSceneManager* scene_manager_;

	// インターフェースマネージャー
	CInterfaceManager* interface_manager_;

	// スレッド
	CThread* thread_;

	// ループフラグ
	bool volatile loop_flag_;

	// 更新フラグ
	bool volatile update_flag_;

	// スレッド
	static void Thread(CApplicationManager* application_manager);
};

#endif	// _APPLICATION_MANAGER_H_

//---------------------------------- EOF --------------------------------------
