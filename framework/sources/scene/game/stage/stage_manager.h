//*****************************************************************************
//
// ステージマネージャークラス
//
// Author		: Kenji Kabutomori
//
//*****************************************************************************

//*****************************************************************************
// 多重定義防止
//*****************************************************************************
#pragma once

#ifndef _STAGE_MANAGER_H_
#define _STAGE_MANAGER_H_

//*****************************************************************************
// インクルード
//*****************************************************************************
#include "basic/basic.h"

//*****************************************************************************
// ライブラリのリンク
//*****************************************************************************

//*****************************************************************************
// マクロ定義
//*****************************************************************************

//*****************************************************************************
// 構造体定義
//*****************************************************************************

//*****************************************************************************
// クラスの前方参照
//*****************************************************************************
class CCharacterManager;

//*****************************************************************************
// クラス定義
//*****************************************************************************
class CStageManager : public CBasic
{
public:
	enum STAGE_TYPE
	{
		STAGE_TYPE_NORMAL = 0,
		STAGE_TYPE_MAX
	};

	// コンストラクタ
	CStageManager(CCharacterManager* character_manager);

	// デストラクタ
	virtual ~CStageManager(void);

	// 初期化
	bool Init(void);

	// 更新
	void Update(void);

	// 描画
	void Draw(void);

	// 終了
	void Uninit(void);

	// ステージのセットアップ
	void Setup(STAGE_TYPE stage_type);

	// ステージタイプの取得
	STAGE_TYPE stage_type(void){return stage_type_;}

private:
	CCharacterManager* character_manager_;
	STAGE_TYPE stage_type_;
};

#endif	// _STAGE_MANAGER_H_

//---------------------------------- EOF --------------------------------------
