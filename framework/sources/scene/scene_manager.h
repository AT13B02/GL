//*****************************************************************************
//
// シーンマネージャークラス
//
// Author		: Kenji Kabutomori
//
//*****************************************************************************

//*****************************************************************************
// 多重定義防止
//*****************************************************************************
#pragma once

#ifndef _SCENE_MANAGER_H_
#define _SCENE_MANAGER_H_

//*****************************************************************************
// インクルード
//*****************************************************************************
#include "basic/basic.h"

//*****************************************************************************
// ライブラリのリンク
//*****************************************************************************

//*****************************************************************************
// マクロ定義
//*****************************************************************************

//*****************************************************************************
// 構造体定義
//*****************************************************************************

//*****************************************************************************
// クラスの前方参照
//*****************************************************************************
class CScene;
class CSceneFactory;
class CThread;
class CInterfaceManager;
class CTexture;

//*****************************************************************************
// クラス定義
//*****************************************************************************
class CSceneManager : public CBasic
{
public:
	// コンストラクタ
	CSceneManager(CInterfaceManager* interface_manager);

	// デストラクタ
	virtual ~CSceneManager(void);

	// 初期化
	bool Init(void);

	// 更新
	void Update(void);

	// 描画
	void Draw(void);

	// 終了
	void Uninit(void);

	// 次のシーンを設定
	void set_next_scene(CSceneFactory* scene_factory){next_scene_ = scene_factory;}

	// ロードフラグの取得
	bool load_flag(void){return load_flag_;}

protected:

private:
	// 現在のシーン
	CScene* scene_;

	// ロード中のシーン
	CScene* load_;

	// 次のシーンのファクトリ
	CSceneFactory* next_scene_;

	// 入力デバイス
	CInterfaceManager* interface_manager_;

	// ロード中に使用するスレッド
	CThread* thread_;

	// ロードフラグ
	bool load_flag_;

	// ロード用関数
	static void Load(CSceneManager* scene_manager);

};

#endif	// _SCENE_MANAGER_H_

//---------------------------------- EOF --------------------------------------
